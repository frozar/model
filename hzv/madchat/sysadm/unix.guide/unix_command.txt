
Commandes de Base sous UNIX       dedie a Bb) , journaliste barbu @ madchat.org
-------------------------------------------------------------------------------

/bin/du - [Statistiques sur l'utilisation du disque]
du -h /home/silk    (taille du rep+sous-reps en Ko/Mo/Go, lisible par Humain)
du -sh /home/silk   (Pour avoir seulement la place totale de *ce* repertoire)

/bin/df - [Fournit la quantite d'espace occupe des systemes de fichiers]
df -h     (Facilement lisible)

/bin/tar - [Creation/Gestion d'archive (backup)]
tar cf archive.tar mon_fichier_ou_repertoire (Pour creer une archive tar)
tar xvf mon_archive.tar      (Decompresser l'archive tar)
tar zxvf mon_archive.tar.gz  (Pour decompresser une archive Gzipee)
tar Ixvf mon_archive.tar.bz2 (Pour decompresser une archive Bzip2ee)

/bin/gzip - [Compression de donnee]
gzip   mon_fichier    (On compresse le fichier)
gunzip mon_fichier.gz (On decompresse un fichier gzipe)

/bin/bz2 - [Compression de donnee : Meilleure que gzip]
bzip2    mon_fichier      (On compresse le fichier)
bunzip2  mon_fichier.bz2  (On decompresse un fichier bzip2e)

[Commandes classiques pour le shell]
logout      (Quitter sa session, raccourci : Control + D)
exit        (Sortir d'une fonction/shell script)
su          (Changer d'identite, ex: passer root)
halt        (Arreter sa machine [Need root access])
reboot      (Faire redemarrer la machine [Need root access])
cat fichier (Afficher tout le fichier)
date        (Afficher la date et l'heure courante)
date -s 20:00:00 (Changer l'heure systeme -> 8 heures du soir)
rm fichier  (Supprimer fichier)
cp          (copier)
mv old new (Deplacer le fichier old vers new)
touch fichier (Creer un fichier vide)
file fichier (Savoir la nature d'un fichier)
w ou who   (qui est connecte au serveur en mode terminal ? et uptime...)

cd        (Retourner dans son home directory)
cd mon_repertoire (Aller dans le repertoire mon_repertoire)
cd ..     (Aller dans le repertoire d'au dessus)
cd -      (Aller dans le dernier repertoire oe on etait)
cd ~user  (Aller dans le home directory de l'user)
cd ~/     (Aller dans votre home dir)

/bin/kill - [Envoyer un signal a un processus]
kill pid_application (Tuer l'application ayant le PID ..)
kill -9 pid_application (Tuer *SAUVAGEMENT* l'application, deconseille)
killall -9 freeamp (tuer sauvagement toutes les sessions freeamp)

/bin/ln - [Creer un lien]
ln -s chemin nom_du_lien (Creer un lien symbolique : Obligatoire pour les reps)
ln old new    (Creer un hard-link)

/bin/grep - [Trouver une chaine dans un fichier/flux]
grep ma_recherche mon_fichier (Afficher les lignes ou il y a le mot ma_rech...)
grep -v truc_que_je_veux_pas  (Ne pas afficher les lignes contenant truc)

/bin/more - [Afficher un fichier/flux page par page]
/bin/less - [Afficher un fichier/flux page par page]

operateurs de redirection (chainables):
ps xauww | grep bash (afficher tout les process qui parlent de bash)
cat fichier | more (afficher un fichier page a page) 
echo "miaou" > ~/miaou.txt (envoyer miaou dans le miaou.txt de votre home dir)
cat fichier1 >> fichier2 (ajouter fichier1 a la fin du fichier2)

commande & (envoyer la commande tourner en arriere plan)
commande && commande2 (executer commande, puis commande2 a la suite)

; (comme en C, aller a la ligne = effectuer plusieurs commandes par ligne)
'blabla' (les variables a l'interieur ne seront Pas interpretees par le shell)
exemple# foo=bar; echo "interprete $foo"; echo "--"; echo 'Pas interprete $foo'
exemple#> interprete bar -- Pas interprete $foo  

/bin/cut - "cut -b 1-6" afficher les 6 premiers caracteres de chaque ligne

/bin/sed - [Remplacer une chaine de caractere par une autre]
sed -e 's/mon_mot/autre_mot/g' (Remplacer tous les mon_mot par autre_mot)

tail /var/log/messages  - Afficher les 10 dernieres lignes du log systeme
tail -f /var/log/syslog - En temps reel

/bin/chmod - [Modifier les permissions d'un fichier/repertoire]
chmod 755 mon_fichier
Comment obtenir le chiffre ?
{}
Autoriser :
La lecture par le proprietaire      : 400
L'ecriture par le proprietaire      : 200
L'execution par le proprietaire     : 100
{}
La lecture pour le groupe           : 40
L'ecriture pour le groupe           : 20
L'execution pour le groupe          : 10
{}
La lecture pour le reste du monde   : 4
L'ecriture pour le reste du monde   : 2
L'execution pour le reste du monde  : 1
{}
Soit "chmod 777 file" pour rendre une appli/script r+w+exec par tout le monde

chown user fichier/rep  (en tant que root, mettre 'user' comme proprietaire)
chown user.group fichier/rep  (assigner a fichier ou rep l'user et le groupe)

./machin.sh  (et non pas machin.sh tout court
              pour lancer un shell/soft executable qui est dans le rep courant)

xterm /bin/wmaker  (lancer X avec GNUStep/Window Maker sans se prendre la tete)

mc  (Visual shell, traite les archives comme des reps, F9 pour configurer)
mc -e ou mcedit  (pke c tout facile a apprendre a utiliser, F9 pour le menu)

ps : processus en cours pour vous
ps xauww : tout les processus en cours, avec les pid  (aussi dans /var/run/)
top : voir les applications tourner en temps reel

updatedb &  (mettre a jour la base de donnee des fichiers, trouvable avec find)
ldconfig &  (mettre a jour la base de donnee des libraires, apres installation)

apt-get install package (=telecharge+install+configurer un soft sous debian :)

************ la philosophie GNU c'est un programme = 1 tache *****************
avoir l'aide: "man programme" ou "programme --help" /usr/doc ou /usr/share/doc
- offset et leonard qui souhaitent a vos 486 des annees d'uptime sur le rezo -