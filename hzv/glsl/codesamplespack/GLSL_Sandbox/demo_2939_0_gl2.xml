<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>

<glsl_hacker>
	
  <window name="win3d01" title="GLSL Sandbox, demo 2939_0 (OpenGL 2.1)" 
          width="800" height="600" 
          gl_version_major="2" gl_version_minor="1"
          build_opengl_extensions_list="0" />


<gpu_program name="gpu_program" >
	<raw_data_vs><![CDATA[	 
void main()
{	
	gl_TexCoord[0] = gl_MultiTexCoord0;
	//gl_Position = ftransform();		
    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;		
}
  ]]></raw_data_vs>
  
	<raw_data_ps><![CDATA[	 
// http://glsl.heroku.com/e#2939.0

// Leaf spin, https://twitter.com/#!/baldand/status/159886208288296960
// Originally designed to fit in a tweet with just a bit of boilerplate

// @mod* rotwang

#ifdef GL_ES
precision mediump float;
#endif

uniform float time;
uniform vec2 mouse;
uniform vec2 resolution;

void main( void ) 
{
	vec2 p = ( gl_FragCoord.xy / resolution.xy );
	
	p -= vec2(0.5);
	p *= vec2(0.5);
	
	float t = time / 12.0;
	float st = sin(t);
	float ct = cos(t);
	
	float w,x,y,z=0.0;
	vec2 u;
	vec3 c;
	y=atan(p.y*ct,p.x*st)/6.28+t;
	z=length(p*2.);
	y=abs(fract(y*4.)*2.-1.)-z*st*0.5;
	y *= 0.66;
	c=vec3(0.0,y+(ct*0.3),y-(st*0.3));
	gl_FragColor = vec4(c,1.);  
}
  ]]></raw_data_ps>

</gpu_program>
  

  
  
	<script name="init_scene" run_mode="INIT" >
		<raw_data><![CDATA[	
    
winW, winH = gh_window.getsize(0)
   

font_a = gh_utils.font_create("Tahoma", 14)

camera = gh_camera.create_persp(60, 1.333, 0.1, 1000.0)
gh_camera.set_viewport(camera, 0, 0, winW, winH)
gh_camera.setpos(camera, 0, 0, 20)
gh_camera.setlookat(camera, 0, 0, 0)
gh_camera.setupvec(camera, 0, 1, 0, 0)

gpu_prog_01 = gh_node.getid("gpu_program")

mesh_quad = gh_mesh.create_quad(winW, winH)
gh_object.use_gl2_vertex_array(mesh_quad, 1) -- *** Old OpenGL... ***

gh_renderer.set_vsync(0)
gh_renderer.set_scissor_state(0)

		]]></raw_data>
	</script> 
  
	<script name="update_scene" run_mode="FRAME" >
		<raw_data><![CDATA[	

elapsed_time = gh_utils.get_elapsed_time()

gh_renderer.set_depth_test_state(1)

gh_camera.bind(camera)

gh_renderer.clear_color_depth_buffers(0.2, 0.2, 0.2, 1.0, 1.0)


gh_gpu_program.bind(gpu_prog_01)
gh_gpu_program.uniform1f(gpu_prog_01, "time", elapsed_time)
gh_gpu_program.uniform2f(gpu_prog_01, "resolution", winW, winH)
mouse_x, mouse_y = gh_input.mouse_getpos() 
gh_gpu_program.uniform2f(gpu_prog_01, "mouse", mouse_x, winH-mouse_y)

gh_object.render(mesh_quad)

gh_utils.font_render(font_a, 10, 20, 0.2, 1.0, 0.0, 1.0, "GLSL Hacker demo - GLSL Sandbox demo")

		]]></raw_data>
	</script> 
	

	<script name="resize_scene" run_mode="SIZE" >
		<raw_data><![CDATA[	

winW, winH = gh_window.getsize(0)

aspect = 1.333
if (winH > 0) then
  aspect = winW / winH
end  
gh_camera.update_persp(camera, 60, aspect, 0.1, 1000.0)
gh_camera.set_viewport(camera, 0, 0, winW, winH)

gh_utils.font_set_viewport_info(font_a, 0, 0, winW, winH)

gh_mesh.update_quad_size(mesh_quad, winW, winH)


		]]></raw_data>
	</script> 
  
  
</glsl_hacker>
