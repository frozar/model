<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>

<glsl_hacker>
	
  <window name="win3d01" title="Polyline Test" width="800" height="400"
          gl_version_major="2" gl_version_minor="1" />
  
  
  <gpu_program name="gpu_prog_01" >
    <raw_data_vs><![CDATA[	 
void main()
{
	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;		
}
  ]]></raw_data_vs>
    <raw_data_ps><![CDATA[	 
void main (void)
{
  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);
}
    ]]></raw_data_ps>
  </gpu_program>
  

  
  
	<script name="init_scene" run_mode="INIT" >
		<raw_data><![CDATA[	
    
winW, winH = gh_window.getsize(0)

font_a = gh_utils.font_create("Tahoma", 14)


-- A perspective camera for the 3D scene (torus + background quad)
-- The first three params are the position and the last three params are the lookat point.
camera = gh_camera.create_perspective(0, 0, 30, 0, 0, 0)

glsl_prog = gh_node.getid("gpu_prog_01")

pl = gh_polyline.create()
num_lines = 10
local i
for i=0, num_lines do
  x = math.random(-10, 10)
  y = math.random(-10, 10)
  z = math.random(-10, 10)
  gh_polyline.add_line(pl, 0,0,0,  x,y,z)
end
gh_polyline.build(pl)
gh_object.use_gl2_vertex_array(pl, 1) -- *** Old OpenGL... ***



gizmo = gh_object.create()
gh_object.set_display_tripod_state(gizmo, 1)
gh_object.set_display_grid_state(gizmo, 1)
gh_object.set_grid_params(gizmo, 50.0, 50.0, 10, 10, 1, 1)




gh_renderer.set_vsync(1)
gh_renderer.set_depth_test_state(1)


		]]></raw_data>
	</script> 
  
	<script name="update_scene" run_mode="FRAME" >
		<raw_data><![CDATA[	

elapsed_time = gh_utils.get_elapsed_time()

local cam_pos_x = 40.0 * math.cos(elapsed_time * 1.0)
local cam_pos_y = 20.0 * math.cos(elapsed_time * 0.5)
local cam_pos_z = 40.0 * math.sin(elapsed_time * 1.0)
gh_camera.setpos(camera, cam_pos_x, cam_pos_y, cam_pos_z)
gh_camera.bind(camera)

gh_renderer.clear_color_depth_buffers(0.2, 0.2, 0.2, 1.0, 1.0)

gh_gpu_program.bind(glsl_prog)

--gh_object.set_euler_angles(pl, 0, elapsed_time*50, 0)
gh_object.render(pl)


gh_gpu_program.bind(0)

gh_object.setpos(gizmo, 0, 0, 0)
gh_object.render(gizmo)

gh_utils.font_render(font_a, 10, 20, 0.2, 1.0, 0.0, 1.0, "GLSL Hacker - Polyline test")

		]]></raw_data>
	</script> 
	

	<script name="resize_scene" run_mode="SIZE" >
		<raw_data><![CDATA[	

winW, winH = gh_window.getsize(0)

aspect = 1.333
if (winH > 0) then
  aspect = winW / winH
end  
gh_camera.update_persp(camera, 60, aspect, 0.1, 1000.0)
gh_camera.set_viewport(camera, 0, 0, winW, winH)

gh_utils.font_set_viewport_info(font_a, 0, 0, winW, winH)

		]]></raw_data>
	</script> 
  
  
</glsl_hacker>
