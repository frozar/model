<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>

<glsl_hacker>
	
  <window name="win3d01" title="Shader Toy, julia demo (OpenGL 2.1)" 
          width="800" height="600" 
          gl_version_major="2" gl_version_minor="1"
          build_opengl_extensions_list="0" />


<gpu_program name="gpu_program" >
	<raw_data_vs><![CDATA[	 
void main()
{	
	gl_TexCoord[0] = gl_MultiTexCoord0;
  gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;		
}
  ]]></raw_data_vs>
  
	<raw_data_ps><![CDATA[	 

//https://www.shadertoy.com/view/XsX3DH
  
uniform vec3      iResolution;     // viewport resolution (in pixels)
uniform float     iGlobalTime;     // shader playback time (in seconds)
uniform vec4      iMouse;          // mouse pixel coords. xy: current (if MLB down), zw: click
uniform sampler2D iChannel0;

void main(void) {
	vec2 uv = gl_FragCoord.xy / iResolution.xy;
  
  uv.y *= -1.0; // JeGX mod for GLSL Hacker 0.5.0 

	vec2 lResolution = iResolution.xy / 2.0; //vec2(256.0, 192.0);
	vec2 lPixel = floor(uv * lResolution);
	vec4 lTextureColour = texture2D(iChannel0, lPixel / lResolution);
	
	int lDitherIndex = int(mod(lPixel.x, 4.0)) * 4 + int(mod(lPixel.y, 4.0));
		
	int lI = 0; 
	float lDitherValue = 0.0;	
	     if (lI++ == lDitherIndex) lDitherValue =  1.0;
	else if (lI++ == lDitherIndex) lDitherValue =  9.0;
	else if (lI++ == lDitherIndex) lDitherValue =  3.0;
	else if (lI++ == lDitherIndex) lDitherValue = 11.0;
	else if (lI++ == lDitherIndex) lDitherValue = 13.0;
	else if (lI++ == lDitherIndex) lDitherValue =  5.0;
	else if (lI++ == lDitherIndex) lDitherValue = 15.0;
	else if (lI++ == lDitherIndex) lDitherValue =  7.0;
	else if (lI++ == lDitherIndex) lDitherValue =  4.0;
	else if (lI++ == lDitherIndex) lDitherValue = 12.0;
	else if (lI++ == lDitherIndex) lDitherValue =  2.0;
	else if (lI++ == lDitherIndex) lDitherValue = 10.0;
	else if (lI++ == lDitherIndex) lDitherValue = 16.0;
	else if (lI++ == lDitherIndex) lDitherValue =  8.0;
	else if (lI++ == lDitherIndex) lDitherValue = 14.0;
	else if (lI++ == lDitherIndex) lDitherValue =  6.0;
	lDitherValue /= 16.0;
	//lDitherValue = pow(lDitherValue, clamp(iGlobalTime/10.0, 0.0, 2.0));
	
	gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
	
	if (lDitherValue < lTextureColour.r) gl_FragColor += vec4(1.0, 0.0, 0.0, 1.0);
	if (lDitherValue < lTextureColour.g) gl_FragColor += vec4(0.0, 1.0, 0.0, 1.0);
	if (lDitherValue < lTextureColour.b) gl_FragColor += vec4(0.0, 0.0, 1.0, 1.0);	
}  ]]></raw_data_ps>

</gpu_program>


  
  
	<script name="init_scene" run_mode="INIT" >
		<raw_data><![CDATA[	
    
winW, winH = gh_window.getsize()
   
font_a = gh_utils.font_create("Tahoma", 14)


camera_ortho = gh_camera.create_ortho(-winW/2, winW/2, -winH/2, winH/2, 1.0, -1.0)
gh_camera.set_viewport(camera_ortho, 0, 0, winW, winH)
gh_camera.set_position(camera_ortho, 0, 0, 1)


gpu_prog_01 = gh_node.getid("gpu_program")

local abs_path=0
tex01 = gh_texture.create_from_file("../data/jegx_hulk_001.jpg", 3, abs_path)

mesh_quad = gh_mesh.create_quad(winW, winH)
gh_object.use_gl2_vertex_array(mesh_quad, 1) -- *** Old OpenGL... ***

gh_renderer.set_vsync(0)
gh_renderer.set_scissor_state(0)

		]]></raw_data>
	</script> 
  
	<script name="update_scene" run_mode="FRAME" >
		<raw_data><![CDATA[	

elapsed_time = gh_utils.get_elapsed_time()

gh_renderer.set_depth_test_state(1)

gh_camera.bind(camera_ortho)

gh_renderer.clear_color_depth_buffers(0.2, 0.2, 0.2, 1.0, 1.0)

gh_gpu_program.bind(gpu_prog_01)
gh_gpu_program.uniform1f(gpu_prog_01, "iGlobalTime", elapsed_time)
gh_gpu_program.uniform3f(gpu_prog_01, "iResolution", winW, winH, 0)
mouse_x, mouse_y = gh_input.mouse_getpos() 
gh_gpu_program.uniform4f(gpu_prog_01, "iMouse", mouse_x, winH-mouse_y, 0, 0)
-- gh_gpu_program.uniform1i(gpu_prog_01, "iChannel0", 0);

-- gh_texture.bind(tex01, 0)
gh_object.render(mesh_quad)

gh_utils.font_render(font_a, 10, 20, 0.9, 0.1, 0.0, 1.0, "GLSL Hacker demo - Shader Toy Demo (www.shadertoy.com)")

		]]></raw_data>
	</script> 
	

	<script name="resize_scene" run_mode="SIZE" >
		<raw_data><![CDATA[	

winW, winH = gh_window.getsize(0)

aspect = 1.333
if (winH > 0) then
  aspect = winW / winH
end  
gh_camera.update_ortho(camera_ortho, -winW/2, winW/2, -winH/2, winH/2, 1.0, -1.0)
gh_camera.set_viewport(camera_ortho, 0, 0, winW, winH)

gh_utils.font_set_viewport_info(font_a, 0, 0, winW, winH)

gh_mesh.update_quad_size(mesh_quad, winW, winH)

		]]></raw_data>
	</script> 
  
  
</glsl_hacker>
